//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class CodeX_UIAgentManagerWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(CodeX.UIAgentManager), typeof(GFW.ManagerSystem.Manager));
		L.RegFunction("DoStart", DoStart);
		L.RegFunction("GetUILayer", GetUILayer);
		L.RegFunction("GetTagRoot", GetTagRoot);
		L.RegFunction("NewObject", NewObject);
		L.RegFunction("CreateView", CreateView);
		L.RegFunction("SetUIDepth", SetUIDepth);
		L.RegFunction("ShowProgressView", ShowProgressView);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DoStart(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			CodeX.UIAgentManager obj = (CodeX.UIAgentManager)ToLua.CheckObject<CodeX.UIAgentManager>(L, 1);
			obj.DoStart();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetUILayer(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			CodeX.UIAgentManager obj = (CodeX.UIAgentManager)ToLua.CheckObject<CodeX.UIAgentManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			UnityEngine.Transform o = obj.GetUILayer(arg0);
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetTagRoot(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			CodeX.UIAgentManager obj = (CodeX.UIAgentManager)ToLua.CheckObject<CodeX.UIAgentManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			UnityEngine.Transform o = obj.GetTagRoot(arg0);
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int NewObject(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			CodeX.UIAgentManager obj = (CodeX.UIAgentManager)ToLua.CheckObject<CodeX.UIAgentManager>(L, 1);
			UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 2, typeof(UnityEngine.GameObject));
			UnityEngine.GameObject o = obj.NewObject(arg0);
			ToLua.PushSealed(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CreateView(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 4)
			{
				CodeX.UIAgentManager obj = (CodeX.UIAgentManager)ToLua.CheckObject<CodeX.UIAgentManager>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				string arg1 = ToLua.CheckString(L, 3);
				string arg2 = ToLua.CheckString(L, 4);
				obj.CreateView(arg0, arg1, arg2);
				return 0;
			}
			else if (count == 5)
			{
				CodeX.UIAgentManager obj = (CodeX.UIAgentManager)ToLua.CheckObject<CodeX.UIAgentManager>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				string arg1 = ToLua.CheckString(L, 3);
				string arg2 = ToLua.CheckString(L, 4);
				LuaFunction arg3 = ToLua.CheckLuaFunction(L, 5);
				obj.CreateView(arg0, arg1, arg2, arg3);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: CodeX.UIAgentManager.CreateView");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetUIDepth(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 1, typeof(UnityEngine.GameObject));
			bool arg1 = LuaDLL.luaL_checkboolean(L, 2);
			int arg2 = (int)LuaDLL.luaL_checknumber(L, 3);
			CodeX.UIAgentManager.SetUIDepth(arg0, arg1, arg2);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ShowProgressView(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1)
			{
				UnityEngine.AsyncOperation arg0 = (UnityEngine.AsyncOperation)ToLua.CheckObject<UnityEngine.AsyncOperation>(L, 1);
				CodeX.UIAgentManager.ShowProgressView(arg0);
				return 0;
			}
			else if (count == 2)
			{
				UnityEngine.AsyncOperation arg0 = (UnityEngine.AsyncOperation)ToLua.CheckObject<UnityEngine.AsyncOperation>(L, 1);
				LuaFunction arg1 = ToLua.CheckLuaFunction(L, 2);
				CodeX.UIAgentManager.ShowProgressView(arg0, arg1);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: CodeX.UIAgentManager.ShowProgressView");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

